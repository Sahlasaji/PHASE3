<UserControl x:Class="PatientApp.AppointmentConfirmationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PatientApp"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <StackPanel>
        <TextBlock Text="Appointment Confirmation" FontSize="24" FontWeight="Bold" Margin="0,0,0,20"/>

        <ListBox ItemsSource="{Binding Patients}" x:Name="PatientsListBox" Height="300">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" Margin="0,0,0,10">
                        <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding Slot}" />
                        <TextBlock Text="{Binding BookingDate, StringFormat='{}{0:MM/dd/yyyy}'}" />

                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                            <Button Content="Confirm" Width="75" Margin="5,0,5,0" 
                                    Command="{Binding DataContext.ConfirmAppointmentCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}" />
                            <Button Content="Cancel" Width="75" Margin="5,0,5,0" 
                                    Command="{Binding DataContext.CancelAppointmentCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}" />
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </StackPanel>
using System;
using System.Collections.ObjectModel;
using System.Windows;
using System.Windows.Input;

namespace PatientAdmissionApp
{
    public class PatientViewModel : BaseViewModel, Ipatient
    {
        public event EventHandler AppointmentUpdated;
        public ObservableCollection<PatientModel> Patients { get; set; } = new ObservableCollection<PatientModel>();
        public ObservableCollection<PatientModel> ConfirmedPatients { get; set; } = new ObservableCollection<PatientModel>();

        private PatientModel _newPatient;
        public PatientModel NewPatient
        {
            get { return _newPatient; }
            set { _newPatient = value; OnPropertyChanged(); }
        }

        public ICommand RegisterPatientCommand { get; set; }
        public ICommand ConfirmAppointmentCommand { get; set; }
        public ICommand CancelAppointmentCommand { get; set; }

        public PatientViewModel()
        {
            NewPatient = new PatientModel();
            RegisterPatientCommand = new RelayCommand(RegisterPatient);
            ConfirmAppointmentCommand = new RelayCommand(ConfirmAppointment);
            CancelAppointmentCommand = new RelayCommand(CancelAppointment);
        }

        public void RegisterPatient(object parameter)
        {
            Patients.Add(new PatientModel
            {
                Name = NewPatient.Name,
                Dateofbirth = NewPatient.Dateofbirth,
                Age = DateTime.Now.Year - NewPatient.Dateofbirth.Year,
                Address = NewPatient.Address,
                Slot = NewPatient.Slot,
                BookingDate = NewPatient.BookingDate
            });
            NewPatient = new PatientModel();
            MessageBox.Show("Registration Success!!!!");
        }

        public void ConfirmAppointment(object parameter)
        {
            if (parameter is PatientModel patient)
            {
                // Move patient to ConfirmedPatients and remove from Patients
                ConfirmedPatients.Add(patient);
                Patients.Remove(patient);
                MessageBox.Show($"{patient.Name}'s appointment confirmed.");
            }
        }

        public void CancelAppointment(object parameter)
        {
            if (parameter is PatientModel patient)
            {
                // Remove patient from Patients
                Patients.Remove(patient);
                MessageBox.Show($"{patient.Name}'s appointment has been canceled.");
            }
        }
    }
}





</UserControl>
